{"id":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","dependencies":[{"name":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\package.json","includedInParent":true,"mtime":1550222189140},{"name":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\public\\.babelrc","includedInParent":true,"mtime":1550182924000},{"name":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\package.json","includedInParent":true,"mtime":1550222184595},{"name":"./equalArrays","loc":{"line":1,"column":26},"parent":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js","resolved":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\equalArrays.js"},{"name":"./equalByTag","loc":{"line":2,"column":25},"parent":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js","resolved":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\equalByTag.js"},{"name":"./equalObjects","loc":{"line":3,"column":27},"parent":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js","resolved":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\equalObjects.js"},{"name":"../lang/isArray","loc":{"line":4,"column":22},"parent":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js","resolved":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\lang\\isArray.js"},{"name":"./isHostObject","loc":{"line":5,"column":27},"parent":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js","resolved":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\isHostObject.js"},{"name":"../lang/isTypedArray","loc":{"line":6,"column":27},"parent":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js","resolved":"C:\\Users\\sachabarber\\Desktop\\ExpressWithParcel\\node_modules\\lodash-compat\\lang\\isTypedArray.js"}],"generated":{"js":"var equalArrays = require('./equalArrays'),\n    equalByTag = require('./equalByTag'),\n    equalObjects = require('./equalObjects'),\n    isArray = require('../lang/isArray'),\n    isHostObject = require('./isHostObject'),\n    isTypedArray = require('../lang/isTypedArray');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nmodule.exports = baseIsEqualDeep;\n","map":{"mappings":[{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqualDeep.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}}],"sources":{"../node_modules/lodash-compat/internal/baseIsEqualDeep.js":"var equalArrays = require('./equalArrays'),\n    equalByTag = require('./equalByTag'),\n    equalObjects = require('./equalObjects'),\n    isArray = require('../lang/isArray'),\n    isHostObject = require('./isHostObject'),\n    isTypedArray = require('../lang/isTypedArray');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nmodule.exports = baseIsEqualDeep;\n"},"lineCount":104}},"hash":"6d527beafe2c28424c4f55c0a6f06d6a","cacheData":{"env":{}}}