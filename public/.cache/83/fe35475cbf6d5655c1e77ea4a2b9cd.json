{"id":"../node_modules/lodash-compat/internal/baseIsEqual.js","dependencies":[{"name":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\package.json","includedInParent":true,"mtime":1550404475816},{"name":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\public\\.babelrc","includedInParent":true,"mtime":1550262762424},{"name":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\package.json","includedInParent":true,"mtime":1550263722649},{"name":"./baseIsEqualDeep","loc":{"line":1,"column":30},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqual.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqualDeep.js"},{"name":"../lang/isObject","loc":{"line":2,"column":23},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqual.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\lang\\isObject.js"},{"name":"./isObjectLike","loc":{"line":3,"column":27},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseIsEqual.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\isObjectLike.js"}],"generated":{"js":"var baseIsEqualDeep = require('./baseIsEqualDeep'),\n    isObject = require('../lang/isObject'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\nmodule.exports = baseIsEqual;\n","map":{"mappings":[{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIsEqual.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../node_modules/lodash-compat/internal/baseIsEqual.js":"var baseIsEqualDeep = require('./baseIsEqualDeep'),\n    isObject = require('../lang/isObject'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\nmodule.exports = baseIsEqual;\n"},"lineCount":29}},"hash":"dd1e0b1499eebcade2647e69a404ca8b","cacheData":{"env":{}}}