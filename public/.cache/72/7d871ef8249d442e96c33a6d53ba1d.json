{"id":"../node_modules/lodash-compat/internal/baseIndexOf.js","dependencies":[{"name":"C:\\Users\\sacha\\Desktop\\ParcelWithExpressJS\\package.json","includedInParent":true,"mtime":1550185585002},{"name":"C:\\Users\\sacha\\Desktop\\ParcelWithExpressJS\\public\\.babelrc","includedInParent":true,"mtime":1550182923783},{"name":"C:\\Users\\sacha\\Desktop\\ParcelWithExpressJS\\node_modules\\lodash-compat\\package.json","includedInParent":true,"mtime":1550183331111},{"name":"./indexOfNaN","loc":{"line":1,"column":25},"parent":"C:\\Users\\sacha\\Desktop\\ParcelWithExpressJS\\node_modules\\lodash-compat\\internal\\baseIndexOf.js","resolved":"C:\\Users\\sacha\\Desktop\\ParcelWithExpressJS\\node_modules\\lodash-compat\\internal\\indexOfNaN.js"}],"generated":{"js":"var indexOfNaN = require('./indexOfNaN');\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n","map":{"mappings":[{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash-compat/internal/baseIndexOf.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"../node_modules/lodash-compat/internal/baseIndexOf.js":"var indexOfNaN = require('./indexOfNaN');\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n"},"lineCount":28}},"hash":"73db0ecc1da51f628d9b6d0613f760ae","cacheData":{"env":{}}}