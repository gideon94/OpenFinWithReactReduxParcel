{"id":"../node_modules/lodash-compat/internal/createFind.js","dependencies":[{"name":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\package.json","includedInParent":true,"mtime":1550404475816},{"name":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\public\\.babelrc","includedInParent":true,"mtime":1550262762424},{"name":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\package.json","includedInParent":true,"mtime":1550263722649},{"name":"./baseCallback","loc":{"line":1,"column":27},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\createFind.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseCallback.js"},{"name":"./baseFind","loc":{"line":2,"column":23},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\createFind.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseFind.js"},{"name":"./baseFindIndex","loc":{"line":3,"column":28},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\createFind.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\baseFindIndex.js"},{"name":"../lang/isArray","loc":{"line":4,"column":22},"parent":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\internal\\createFind.js","resolved":"C:\\Users\\sacha\\Desktop\\OpenfinExpressWorkingWithParcel\\node_modules\\lodash-compat\\lang\\isArray.js"}],"generated":{"js":"var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n","map":{"mappings":[{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash-compat/internal/createFind.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../node_modules/lodash-compat/internal/createFind.js":"var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n"},"lineCount":26}},"hash":"9ac5ad0a9a884bc184ebd8c5fe82163d","cacheData":{"env":{}}}